import { NextApiRequest, NextApiResponse } from 'next';
import { OpenAI } from 'openai';

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') return res.status(405).end();

  const { candidateName, recruiterNotes, jdBullets } = req.body;

  try {
    const prompt = `You are helping a recruiter write a candidate summary using their notes and the job description bullets.

Candidate Name: ${candidateName}

Recruiter Notes: ${recruiterNotes}

Job Description Bullets:
${jdBullets.map((b: string, i: number) => `${i + 1}. ${b}`).join('\n')}

Create a structured summary with the following sections:
- 🎧 JD Trust Table
- ✅ Fast Facts
- 🧩 JD Scorecard
- 📥 Recommendation
- 🧾 Candidate Summary`;

    const completion = await openai.chat.completions.create({
      model: 'gpt-4o',
      messages: [{ role: 'user', content: prompt }],
      temperature: 0.5,
    });

    const aiOutput = completion.choices[0].message?.content;
    res.status(200).json({ report: aiOutput });
  } catch (err: any) {
    console.error(err);
    res.status(500).json({ error: 'Something went wrong generating the report.' });
  }
}

export default function DemoReport() {
  return (
    <div className="p-4 max-w-3xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">Jane Doe – VP of Data Strategy</h1>
      <h2 className="font-semibold text-lg">🎧 JD Trust Table</h2>
      <ul className="list-disc pl-4 mb-4">
        <li><strong>You Said:</strong> Strategic execution — <strong>She Said:</strong> "Led go-to-market on key payer insights"</li>
        <li><strong>You Said:</strong> BI/analytics — <strong>She Said:</strong> "Built Tableau dashboards for 12+ regions"</li>
      </ul>
      <h2 className="font-semibold text-lg">✅ Fast Facts</h2>
      <ul className="list-disc pl-4 mb-4">
        <li>12 years in healthcare analytics</li>
        <li>Based in Denver, open to travel</li>
      </ul>
      <h2 className="font-semibold text-lg">🧩 JD Scorecard</h2>
      <ul className="list-disc pl-4 mb-4">
        <li>Strategic Leadership: ✅</li>
        <li>Healthcare Experience: ✅</li>
        <li>Team Development: ⚠️ (limited team size)</li>
      </ul>
      <h2 className="font-semibold text-lg">📥 Next Steps Recommendation</h2>
      <p className="mb-4">Strong fit. Recommend 1st-round video interview – available Thurs/Fri.</p>
      <h2 className="font-semibold text-lg">🧾 Candidate Summary</h2>
      <p>Jane built P3’s payer analytics system, helped define PMPM strategies, and brings direct experience with VBC models. Executive-ready communicator who works well with ambiguous data problems.</p>
    </div>
  );
}

export default function Dashboard() {
  return (
    <div className="p-4">
      <h1 className="text-xl font-bold mb-2">Demo Recruiter Dashboard (Admin View)</h1>
      <ul className="list-disc pl-4">
        <li>Jane Doe – <a href="/report/demo123" className="text-blue-500 underline">View Report</a></li>
        <li>John Smith – <a href="#" className="text-gray-500">Coming Soon</a></li>
      </ul>
    </div>
  );
}

import { useState } from 'react';
import axios from 'axios';

export default function SubmitPage() {
  const [candidateName, setCandidateName] = useState('Jane Doe');
  const [recruiterNotes, setRecruiterNotes] = useState('Led data migration, improved pipeline by 30%.');
  const [jdBullets, setJdBullets] = useState('- Strategic execution\n- BI/analytics\n- Value-based care');
  const [result, setResult] = useState('');

  const handleSubmit = async () => {
    try {
      const { data } = await axios.post('/api/generateReport', {
        candidateName,
        recruiterNotes,
        jdBullets: jdBullets.split('\n')
      });
      setResult(data.report);
    } catch (err) {
      setResult('Error generating report.');
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-4">
      <h2 className="text-xl font-bold mb-4">Submit Candidate</h2>
      <input className="w-full border mb-2 p-2" placeholder="Candidate Name" value={candidateName} onChange={e => setCandidateName(e.target.value)} />
      <textarea className="w-full border mb-2 p-2" rows={4} placeholder="Recruiter Notes" value={recruiterNotes} onChange={e => setRecruiterNotes(e.target.value)} />
      <textarea className="w-full border mb-2 p-2" rows={3} placeholder="Job Description Bullets (one per line)" value={jdBullets} onChange={e => setJdBullets(e.target.value)} />
      <button onClick={handleSubmit} className="px-4 py-2 bg-green-600 text-white rounded">Generate Report</button>
      {result && (
        <div className="mt-4 whitespace-pre-wrap border p-4 bg-gray-100">{result}</div>
      )}
    </div>
  );
}

import Link from 'next/link';

export default function Home() {
  return (
    <div className="min-h-screen flex flex-col items-center justify-center p-4">
      <h1 className="text-3xl font-bold mb-4">Aligned MVP</h1>
      <Link href="/submit">
        <button className="px-4 py-2 bg-blue-600 text-white rounded">Submit Candidate Summary</button>
      </Link>
      <Link href="/dashboard?adminView=true" className="mt-4 text-blue-500 underline">
        Peek at Dashboard</Link>
    </div>
  );
}
